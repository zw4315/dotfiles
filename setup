#!/bin/bash
set -euo pipefail

# 1. 检测 dotfiles 目录
DOTFILES="${DOTFILES:-$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)}"
echo "Installing dotfiles from: $DOTFILES"

# 2. 链接一个文件或目录（安全模式：不覆盖已有非软链）
link_one() {
    local src="$1"
    local dst="$2"

    # 如果已经是正确的软链，跳过
    if [[ -L "$dst" && "$(readlink "$dst")" == "$src" ]]; then
        echo "✅ $dst already linked"
        return
    fi

    # 如果目标存在且不是软链，备份
    if [[ -e "$dst" && ! -L "$dst" ]]; then
        mv "$dst" "$dst.backup.$(date +%s)"
        echo "💾 Backup $dst"
    fi

    ln -sfn "$src" "$dst"
    echo "🔗 Linked $dst → $src"
}

# 3. 链接所有 dotfiles（保持结构）
link_all() {
    for path in "$DOTFILES/files"/*; do
        local name
        name="$(basename "$path")"

        if [[ "$name" == "vim" ]]; then
            # Vim 特殊处理，保留 ~/.vim/plugin
            link_vim_preserve_plugins "$path" "$HOME/.vim"
        else
            link_one "$path" "$HOME/.$name"
        fi
    done
}

# 4. 保留 ~/.vim/plugin，只软链其他内容
link_vim_preserve_plugins() {
    local src_root="$1"
    local dst_root="$2"

    mkdir -p "$dst_root"

    for sub in "$src_root"/*; do
        local base
        base="$(basename "$sub")"

        if [[ "$base" == "plugin" ]]; then
            # 跳过 plugin 目录，不覆盖现有插件
            echo "⚠️ Skipping linking of $dst_root/plugin to preserve existing plugins"
            continue
        fi

        link_one "$sub" "$dst_root/$base"
    done
}

# 5. 执行
sudo apt install ripgrep
sudo apt install universal-ctags
sudo apt install global cscope
sudo apt install python3-pygments
link_all
echo "✅ All dotfiles linked."

